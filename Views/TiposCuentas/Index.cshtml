@model IEnumerable<TipoCuenta>;

@{
    ViewData["Title"] = "Tipos Cuentas";
}

<h1>El tipo de cuenta se refiere a como podemos agrupar cuentas</h1>
<h5>Puedes llamar a tus cuentas como quieras, Ejemplo:
    Crédito, Débito, Prestamos, Ahorros, Inversiones, etc.
</h5>

<a asp-action="Crear" class="btn btn-primary mb-3">Crear nuevo</a>

<table class="table">
    <Thead>
        <tr>
            <th>Acciones</th>
            <th>Nombre</th>
        </tr>
    </Thead>
    <tbody id="reordenable">
        @foreach (var tipoCuenta in Model)
        {
            <tr>
                <td>
                    <input type="hidden" value="@tipoCuenta.Id" class="Ids" />
                    <a class="btn btn-primary" asp-action="Editar" asp-route-id="@tipoCuenta.Id">Editar</a>
                    <a class="btn btn-danger" asp-action="Borrar" asp-route-Id=@tipoCuenta.Id>Borrar</a>
                </td>
                <td>@tipoCuenta.Nombre</td>
            </tr>

        }
    </tbody>
</table>

@section Scripts{
    <script>

        const urlOrdenar = '@Url.Action("ordenar")';

        $(function()
        {
            $("#reordenable").sortable(
                {stop: async function(e, ui){
                    await actualizarOrdenes();
                }}
            );
            async function actualizarOrdenes(){
                const Ids = obtenerIdsDeElementos(); 
              await enviarIdsAlBackend(Ids);
            }

            function obtenerIdsDeElementos(){
                const Ids = $(".Ids").map(function(){
                    return $(this).val();
                }).get(); 

                return Ids;
            }

            async function enviarIdsAlBackend(Ids){
                var data = JSON.stringify(Ids);

                await fetch(urlOrdenar, {
                    method: 'POST',
                    body: data,
                    headers: {

                  'Content-Type' : 'application/json' 
                  }
                });
            }
        })
    </script>
}
